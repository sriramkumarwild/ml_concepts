{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "%pylab inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def SquaredLoss(pred,y):\n",
    "    loss = (1-pred*y)**2  \n",
    "    return loss\n",
    "    \n",
    "def HingeLoss(pred,y):\n",
    "    loss = [max(0,1-y[ind]*i) for ind,i in enumerate(pred)]\n",
    "    return loss\n",
    "    \n",
    "def LogisticLoss(pred,y):\n",
    "    loss = [np.log2(1 + np.exp(-i)) for i in pred]\n",
    "    return loss\n",
    "\n",
    "def CrossEntropy(pred,y):\n",
    "    return -y*np.log(pred)-(1-y)*np.log(1-pred)\n",
    "\n",
    "def ExpLoss(p,y):\n",
    "    return np.exp(-p*y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "y    = np.ones([50])\n",
    "pred = np.linspace(-3,3,num=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "Sq = SquaredLoss(pred,y)\n",
    "Hi = HingeLoss(pred,y)\n",
    "Lo = LogisticLoss(pred,y)\n",
    "Ex = ExpLoss(pred,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "plt.plot([-3, 0, 0, 3], [1, 1, 0, 0], label='zero-one',linewidth=2)\n",
    "plt.plot(pred,Sq, label='squared',linewidth=2)\n",
    "plt.plot(pred,Hi, label='hinge',linewidth=2)\n",
    "plt.plot(pred,Ex, label='exponential',linewidth=2)\n",
    "plt.plot(pred,Lo, label='logistic',linewidth=2)\n",
    "plt.legend()\n",
    "plt.ylim((0, 5))\n",
    "plt.xlabel('predicted * actual value ')\n",
    "plt.ylabel('Loss')"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [Root]",
   "language": "python",
   "name": "Python [Root]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
